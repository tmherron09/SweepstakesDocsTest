### YamlMime:ManagedReference
items:
- uid: SweepstakesProject.UI
  commentId: T:SweepstakesProject.UI
  id: UI
  parent: SweepstakesProject
  children:
  - SweepstakesProject.UI.DisplayText(System.String)
  - SweepstakesProject.UI.GetInputFor(System.String)
  - SweepstakesProject.UI.GetInputYesNo(System.String)
  langs:
  - csharp
  - vb
  name: UI
  nameWithType: UI
  fullName: SweepstakesProject.UI
  type: Class
  source:
    remote:
      path: SweepstakesProject/UI.cs
      branch: master
      repo: https://github.com/tmherron09/SweepstakeManager.git
    id: UI
    path: ../UI.cs
    startLine: 4
  assemblies:
  - SweepstakesProject
  namespace: SweepstakesProject
  syntax:
    content: public static class UI
    content.vb: Public Module UI
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SweepstakesProject.UI.GetInputFor(System.String)
  commentId: M:SweepstakesProject.UI.GetInputFor(System.String)
  id: GetInputFor(System.String)
  parent: SweepstakesProject.UI
  langs:
  - csharp
  - vb
  name: GetInputFor(String)
  nameWithType: UI.GetInputFor(String)
  fullName: SweepstakesProject.UI.GetInputFor(System.String)
  type: Method
  source:
    remote:
      path: SweepstakesProject/UI.cs
      branch: master
      repo: https://github.com/tmherron09/SweepstakeManager.git
    id: GetInputFor
    path: ../UI.cs
    startLine: 6
  assemblies:
  - SweepstakesProject
  namespace: SweepstakesProject
  syntax:
    content: public static string GetInputFor(string prompt)
    parameters:
    - id: prompt
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetInputFor(prompt As String) As String
  overload: SweepstakesProject.UI.GetInputFor*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SweepstakesProject.UI.GetInputYesNo(System.String)
  commentId: M:SweepstakesProject.UI.GetInputYesNo(System.String)
  id: GetInputYesNo(System.String)
  parent: SweepstakesProject.UI
  langs:
  - csharp
  - vb
  name: GetInputYesNo(String)
  nameWithType: UI.GetInputYesNo(String)
  fullName: SweepstakesProject.UI.GetInputYesNo(System.String)
  type: Method
  source:
    remote:
      path: SweepstakesProject/UI.cs
      branch: master
      repo: https://github.com/tmherron09/SweepstakeManager.git
    id: GetInputYesNo
    path: ../UI.cs
    startLine: 14
  assemblies:
  - SweepstakesProject
  namespace: SweepstakesProject
  syntax:
    content: public static bool GetInputYesNo(string prompt)
    parameters:
    - id: prompt
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetInputYesNo(prompt As String) As Boolean
  overload: SweepstakesProject.UI.GetInputYesNo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SweepstakesProject.UI.DisplayText(System.String)
  commentId: M:SweepstakesProject.UI.DisplayText(System.String)
  id: DisplayText(System.String)
  parent: SweepstakesProject.UI
  langs:
  - csharp
  - vb
  name: DisplayText(String)
  nameWithType: UI.DisplayText(String)
  fullName: SweepstakesProject.UI.DisplayText(System.String)
  type: Method
  source:
    remote:
      path: SweepstakesProject/UI.cs
      branch: master
      repo: https://github.com/tmherron09/SweepstakeManager.git
    id: DisplayText
    path: ../UI.cs
    startLine: 32
  assemblies:
  - SweepstakesProject
  namespace: SweepstakesProject
  syntax:
    content: public static void DisplayText(string text)
    parameters:
    - id: text
      type: System.String
    content.vb: Public Shared Sub DisplayText(text As String)
  overload: SweepstakesProject.UI.DisplayText*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SweepstakesProject
  commentId: N:SweepstakesProject
  name: SweepstakesProject
  nameWithType: SweepstakesProject
  fullName: SweepstakesProject
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SweepstakesProject.UI.GetInputFor*
  commentId: Overload:SweepstakesProject.UI.GetInputFor
  name: GetInputFor
  nameWithType: UI.GetInputFor
  fullName: SweepstakesProject.UI.GetInputFor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SweepstakesProject.UI.GetInputYesNo*
  commentId: Overload:SweepstakesProject.UI.GetInputYesNo
  name: GetInputYesNo
  nameWithType: UI.GetInputYesNo
  fullName: SweepstakesProject.UI.GetInputYesNo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SweepstakesProject.UI.DisplayText*
  commentId: Overload:SweepstakesProject.UI.DisplayText
  name: DisplayText
  nameWithType: UI.DisplayText
  fullName: SweepstakesProject.UI.DisplayText
