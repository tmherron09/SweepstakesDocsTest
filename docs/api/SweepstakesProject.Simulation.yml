### YamlMime:ManagedReference
items:
- uid: SweepstakesProject.Simulation
  commentId: T:SweepstakesProject.Simulation
  id: Simulation
  parent: SweepstakesProject
  children:
  - SweepstakesProject.Simulation.#ctor
  - SweepstakesProject.Simulation.CreateMarketingFirmWithManager
  - SweepstakesProject.Simulation.CreateSweepstakesManager(System.String)
  - SweepstakesProject.Simulation.LoadMarketingFirm
  - SweepstakesProject.Simulation.SaveMarketingFirm
  - SweepstakesProject.Simulation.Start
  langs:
  - csharp
  - vb
  name: Simulation
  nameWithType: Simulation
  fullName: SweepstakesProject.Simulation
  type: Class
  source:
    remote:
      path: SweepstakesProject/Simulation.cs
      branch: master
      repo: https://github.com/tmherron09/SweepstakeManager.git
    id: Simulation
    path: ../Simulation.cs
    startLine: 5
  assemblies:
  - SweepstakesProject
  namespace: SweepstakesProject
  syntax:
    content: public class Simulation
    content.vb: Public Class Simulation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SweepstakesProject.Simulation.#ctor
  commentId: M:SweepstakesProject.Simulation.#ctor
  id: '#ctor'
  parent: SweepstakesProject.Simulation
  langs:
  - csharp
  - vb
  name: Simulation()
  nameWithType: Simulation.Simulation()
  fullName: SweepstakesProject.Simulation.Simulation()
  type: Constructor
  source:
    remote:
      path: SweepstakesProject/Simulation.cs
      branch: master
      repo: https://github.com/tmherron09/SweepstakeManager.git
    id: .ctor
    path: ../Simulation.cs
    startLine: 8
  assemblies:
  - SweepstakesProject
  namespace: SweepstakesProject
  syntax:
    content: public Simulation()
    content.vb: Public Sub New
  overload: SweepstakesProject.Simulation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SweepstakesProject.Simulation.Start
  commentId: M:SweepstakesProject.Simulation.Start
  id: Start
  parent: SweepstakesProject.Simulation
  langs:
  - csharp
  - vb
  name: Start()
  nameWithType: Simulation.Start()
  fullName: SweepstakesProject.Simulation.Start()
  type: Method
  source:
    remote:
      path: SweepstakesProject/Simulation.cs
      branch: master
      repo: https://github.com/tmherron09/SweepstakeManager.git
    id: Start
    path: ../Simulation.cs
    startLine: 14
  assemblies:
  - SweepstakesProject
  namespace: SweepstakesProject
  syntax:
    content: public void Start()
    content.vb: Public Sub Start
  overload: SweepstakesProject.Simulation.Start*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SweepstakesProject.Simulation.CreateMarketingFirmWithManager
  commentId: M:SweepstakesProject.Simulation.CreateMarketingFirmWithManager
  id: CreateMarketingFirmWithManager
  parent: SweepstakesProject.Simulation
  langs:
  - csharp
  - vb
  name: CreateMarketingFirmWithManager()
  nameWithType: Simulation.CreateMarketingFirmWithManager()
  fullName: SweepstakesProject.Simulation.CreateMarketingFirmWithManager()
  type: Method
  source:
    remote:
      path: SweepstakesProject/Simulation.cs
      branch: master
      repo: https://github.com/tmherron09/SweepstakeManager.git
    id: CreateMarketingFirmWithManager
    path: ../Simulation.cs
    startLine: 83
  assemblies:
  - SweepstakesProject
  namespace: SweepstakesProject
  syntax:
    content: public void CreateMarketingFirmWithManager()
    content.vb: Public Sub CreateMarketingFirmWithManager
  overload: SweepstakesProject.Simulation.CreateMarketingFirmWithManager*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SweepstakesProject.Simulation.CreateSweepstakesManager(System.String)
  commentId: M:SweepstakesProject.Simulation.CreateSweepstakesManager(System.String)
  id: CreateSweepstakesManager(System.String)
  parent: SweepstakesProject.Simulation
  langs:
  - csharp
  - vb
  name: CreateSweepstakesManager(String)
  nameWithType: Simulation.CreateSweepstakesManager(String)
  fullName: SweepstakesProject.Simulation.CreateSweepstakesManager(System.String)
  type: Method
  source:
    remote:
      path: SweepstakesProject/Simulation.cs
      branch: master
      repo: https://github.com/tmherron09/SweepstakeManager.git
    id: CreateSweepstakesManager
    path: ../Simulation.cs
    startLine: 93
  assemblies:
  - SweepstakesProject
  namespace: SweepstakesProject
  syntax:
    content: public ISweepstakeManager CreateSweepstakesManager(string campaignType)
    parameters:
    - id: campaignType
      type: System.String
    return:
      type: SweepstakesProject.ISweepstakeManager
    content.vb: Public Function CreateSweepstakesManager(campaignType As String) As ISweepstakeManager
  overload: SweepstakesProject.Simulation.CreateSweepstakesManager*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SweepstakesProject.Simulation.SaveMarketingFirm
  commentId: M:SweepstakesProject.Simulation.SaveMarketingFirm
  id: SaveMarketingFirm
  parent: SweepstakesProject.Simulation
  langs:
  - csharp
  - vb
  name: SaveMarketingFirm()
  nameWithType: Simulation.SaveMarketingFirm()
  fullName: SweepstakesProject.Simulation.SaveMarketingFirm()
  type: Method
  source:
    remote:
      path: SweepstakesProject/Simulation.cs
      branch: master
      repo: https://github.com/tmherron09/SweepstakeManager.git
    id: SaveMarketingFirm
    path: ../Simulation.cs
    startLine: 114
  assemblies:
  - SweepstakesProject
  namespace: SweepstakesProject
  syntax:
    content: public void SaveMarketingFirm()
    content.vb: Public Sub SaveMarketingFirm
  overload: SweepstakesProject.Simulation.SaveMarketingFirm*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SweepstakesProject.Simulation.LoadMarketingFirm
  commentId: M:SweepstakesProject.Simulation.LoadMarketingFirm
  id: LoadMarketingFirm
  parent: SweepstakesProject.Simulation
  langs:
  - csharp
  - vb
  name: LoadMarketingFirm()
  nameWithType: Simulation.LoadMarketingFirm()
  fullName: SweepstakesProject.Simulation.LoadMarketingFirm()
  type: Method
  source:
    remote:
      path: SweepstakesProject/Simulation.cs
      branch: master
      repo: https://github.com/tmherron09/SweepstakeManager.git
    id: LoadMarketingFirm
    path: ../Simulation.cs
    startLine: 125
  assemblies:
  - SweepstakesProject
  namespace: SweepstakesProject
  syntax:
    content: public MarketingFirm LoadMarketingFirm()
    return:
      type: SweepstakesProject.MarketingFirm
    content.vb: Public Function LoadMarketingFirm As MarketingFirm
  overload: SweepstakesProject.Simulation.LoadMarketingFirm*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SweepstakesProject
  commentId: N:SweepstakesProject
  name: SweepstakesProject
  nameWithType: SweepstakesProject
  fullName: SweepstakesProject
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SweepstakesProject.Simulation.#ctor*
  commentId: Overload:SweepstakesProject.Simulation.#ctor
  name: Simulation
  nameWithType: Simulation.Simulation
  fullName: SweepstakesProject.Simulation.Simulation
- uid: SweepstakesProject.Simulation.Start*
  commentId: Overload:SweepstakesProject.Simulation.Start
  name: Start
  nameWithType: Simulation.Start
  fullName: SweepstakesProject.Simulation.Start
- uid: SweepstakesProject.Simulation.CreateMarketingFirmWithManager*
  commentId: Overload:SweepstakesProject.Simulation.CreateMarketingFirmWithManager
  name: CreateMarketingFirmWithManager
  nameWithType: Simulation.CreateMarketingFirmWithManager
  fullName: SweepstakesProject.Simulation.CreateMarketingFirmWithManager
- uid: SweepstakesProject.Simulation.CreateSweepstakesManager*
  commentId: Overload:SweepstakesProject.Simulation.CreateSweepstakesManager
  name: CreateSweepstakesManager
  nameWithType: Simulation.CreateSweepstakesManager
  fullName: SweepstakesProject.Simulation.CreateSweepstakesManager
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SweepstakesProject.ISweepstakeManager
  commentId: T:SweepstakesProject.ISweepstakeManager
  parent: SweepstakesProject
  name: ISweepstakeManager
  nameWithType: ISweepstakeManager
  fullName: SweepstakesProject.ISweepstakeManager
- uid: SweepstakesProject.Simulation.SaveMarketingFirm*
  commentId: Overload:SweepstakesProject.Simulation.SaveMarketingFirm
  name: SaveMarketingFirm
  nameWithType: Simulation.SaveMarketingFirm
  fullName: SweepstakesProject.Simulation.SaveMarketingFirm
- uid: SweepstakesProject.Simulation.LoadMarketingFirm*
  commentId: Overload:SweepstakesProject.Simulation.LoadMarketingFirm
  name: LoadMarketingFirm
  nameWithType: Simulation.LoadMarketingFirm
  fullName: SweepstakesProject.Simulation.LoadMarketingFirm
- uid: SweepstakesProject.MarketingFirm
  commentId: T:SweepstakesProject.MarketingFirm
  parent: SweepstakesProject
  name: MarketingFirm
  nameWithType: MarketingFirm
  fullName: SweepstakesProject.MarketingFirm
